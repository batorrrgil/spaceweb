{"ast":null,"code":"var _jsxFileName = \"/Users/baburyx/Documents/Space/space_web/src/components/AnswerOption.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"li\", {\n    className: \"answerOption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"radioCustomButton\",\n    name: \"radioGroup\",\n    checked: props.answerType === props.answer,\n    id: props.answerType,\n    value: props.answerType,\n    disabled: props.answer,\n    onChange: props.onAnswerSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"radioCustomLabel\",\n    htmlFor: props.answerType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.answerContent));\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default AnswerOption;","map":{"version":3,"sources":["/Users/baburyx/Documents/Space/space_web/src/components/AnswerOption.js"],"names":["React","PropTypes","AnswerOption","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","answerType","answerContent","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B,WACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,OADX;AAEE,MAAA,aAAa,EAAED,GAAG,CAACC,OAFrB;AAGE,MAAA,UAAU,EAAED,GAAG,CAACE,IAHlB;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,MAAA,UAAU,EAAEL,KAAK,CAACM,UALpB;AAME,MAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAEH,SACA;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,IAAI,EAAC,YAHP;AAIE,IAAA,OAAO,EAAEP,KAAK,CAACQ,UAAN,KAAqBR,KAAK,CAACK,MAJtC;AAKE,IAAA,EAAE,EAAEL,KAAK,CAACQ,UALZ;AAME,IAAA,KAAK,EAAER,KAAK,CAACQ,UANf;AAOE,IAAA,QAAQ,EAAER,KAAK,CAACK,MAPlB;AAQE,IAAA,QAAQ,EAAEL,KAAK,CAACO,gBARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAEP,KAAK,CAACQ,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,aADT,CAXF,CADA;AAiBH;;AAEDV,YAAY,CAACW,SAAb,GAAyB;AACvBF,EAAAA,UAAU,EAAEV,SAAS,CAACa,MAAV,CAAiBC,UADN;AAEvBH,EAAAA,aAAa,EAAEX,SAAS,CAACa,MAAV,CAAiBC,UAFT;AAGvBP,EAAAA,MAAM,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UAHF;AAIvBL,EAAAA,gBAAgB,EAAET,SAAS,CAACe,IAAV,CAAeD;AAJV,CAAzB;AAOA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n    function renderAnswerOptions(key) {\n        return (\n          <AnswerOption\n            key={key.content}\n            answerContent={key.content}\n            answerType={key.type}\n            answer={props.answer}\n            questionId={props.questionId}\n            onAnswerSelected={props.onAnswerSelected}\n          />\n        );\n      }\n      \n    return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;"]},"metadata":{},"sourceType":"module"}